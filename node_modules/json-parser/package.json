{
  "_args": [
    [
      {
        "raw": "json-parser",
        "scope": null,
        "escapedName": "json-parser",
        "name": "json-parser",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\EAZETNG\\Desktop\\Node workspace\\Udemy\\Tourify"
    ]
  ],
  "_from": "json-parser@latest",
  "_id": "json-parser@1.1.5",
  "_inCache": true,
  "_location": "/json-parser",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "kael",
    "email": "i@kael.me"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-parser",
    "scope": null,
    "escapedName": "json-parser",
    "name": "json-parser",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/json-parser/-/json-parser-1.1.5.tgz",
  "_shasum": "e62ec5261d1a6a5fc20e812a320740c6d9005677",
  "_shrinkwrap": null,
  "_spec": "json-parser",
  "_where": "C:\\Users\\EAZETNG\\Desktop\\Node workspace\\Udemy\\Tourify",
  "author": {
    "name": "kaelzhang"
  },
  "bugs": {
    "url": "https://github.com/kaelzhang/node-json-parser/issues"
  },
  "dependencies": {
    "esprima": "^2.7.0"
  },
  "description": "JSON parser to parse JSON object and MAINTAIN comments.",
  "devDependencies": {
    "chai": "*",
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "e62ec5261d1a6a5fc20e812a320740c6d9005677",
    "tarball": "https://registry.npmjs.org/json-parser/-/json-parser-1.1.5.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "4cdcd5f5becde06aa5f08bf6942f46e57f787a8d",
  "homepage": "https://github.com/kaelzhang/node-json-parser#readme",
  "keywords": [
    "json-parser",
    "json",
    "lex",
    "parser",
    "ast",
    "syntax",
    "mangler",
    "comments"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "kael",
      "email": "i@kael.me"
    }
  ],
  "name": "json-parser",
  "optionalDependencies": {},
  "readme": "[![NPM version](https://badge.fury.io/js/json-parser.svg)](http://badge.fury.io/js/json-parser)\n[![Build Status](https://travis-ci.org/kaelzhang/node-json-parser.svg?branch=master)](https://travis-ci.org/kaelzhang/node-json-parser)\n<!-- [![Dependency Status](https://david-dm.org/kaelzhang/node-json-parser.svg)](https://david-dm.org/kaelzhang/node-json-parser) -->\n\n# json-parser\n\nJSON parser to parse JSON object and MAINTAIN comments.\n\nThis is a very low level module. For most situations, recommend to use [`comment-json`](https://www.npmjs.org/package/comment-json) instead.\n\n## Install\n\n```sh\n$ npm install json-parser --save\n```\n\n## Usage\n\n```js\nparser(text, [reviver=null,] [remove_comments=false])\n```\n\n- text `String` The string to parse as JSON. See the [JSON](http://json.org/) object for a description of JSON syntax.\n- reviver `function()|null` Default to `null`. It acts the same as the second parameter of [`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse). If a function, prescribes how the value originally produced by parsing is transformed, before being returned.\n- remove_comments `Boolean` If true, the parsed JSON Object won't contain comments\n\nReturns the `Object` corresponding to the given JSON text.\n\ncontent\n\n```js\n/**\n blah\n */\n// comment at top\n{\n  // comment for a\n  /* block comment */\n  \"a\": 1 // comment at right\n}\n// comment at bottom\n```\n\n```js\nvar parser = require('json-parser');\nvar object = parser.parse(content);\nconsole.log(object);\n```\n\nAnd the result will be:\n\n```js\n{\n  // Comments at the top of the file\n  '//^': ['/**\\n blah\\n */', '// comment at top'],\n\n  // Comments at the bottom of the file\n  '//$': ['// comment at bottom'],\n\n  // Comment for a property is the value of `'// <prop>'`\n  '// a': [\n    ['// comment for a', '/* block comment */'],\n    ['// comment at right']\n  ],\n\n  // The real value\n  a: 1\n}\n```\n\n```js\nvar object_no_comments = parser.parse(content, null, true);\nconsole.log(object_no_comments)\n```\n\nAnd the result will be:\n\n```js\n{\n  a: 1\n}\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/kaelzhang/node-json-parser.git"
  },
  "scripts": {
    "test": "mocha --reporter spec ./test/*.js"
  },
  "version": "1.1.5"
}
